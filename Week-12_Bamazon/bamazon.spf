<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>ContentFilters</key>
	<dict/>
	<key>auto_connect</key>
	<true/>
	<key>data</key>
	<dict>
		<key>connection</key>
		<dict>
			<key>database</key>
			<string>bamazon_db</string>
			<key>host</key>
			<string>127.0.0.1</string>
			<key>kcid</key>
			<string>3877757421250971769</string>
			<key>name</key>
			<string>Local</string>
			<key>rdbms_type</key>
			<string>mysql</string>
			<key>sslCACertFileLocation</key>
			<string></string>
			<key>sslCACertFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslCertificateFileLocation</key>
			<string></string>
			<key>sslCertificateFileLocationEnabled</key>
			<integer>0</integer>
			<key>sslKeyFileLocation</key>
			<string></string>
			<key>sslKeyFileLocationEnabled</key>
			<integer>0</integer>
			<key>type</key>
			<string>SPTCPIPConnection</string>
			<key>useSSL</key>
			<integer>0</integer>
			<key>user</key>
			<string>root</string>
		</dict>
		<key>session</key>
		<dict>
			<key>connectionEncoding</key>
			<string>utf8</string>
			<key>contentPageNumber</key>
			<integer>1</integer>
			<key>contentSelection</key>
			<data>
			YnBsaXN0MDDUAQIDBAUGNjdYJHZlcnNpb25YJG9iamVjdHNZJGFy
			Y2hpdmVyVCR0b3ASAAGGoK0HCBUWFxgZHSQoLDA0VSRudWxs0wkK
			CwwQFFdOUy5rZXlzWk5TLm9iamVjdHNWJGNsYXNzow0OD4ACgAOA
			BKMREhOABYAGgAiADFR0eXBlVHJvd3NUa2V5c18QJlNlbGVjdGlv
			bkRldGFpbFR5cGVQcmltYXJ5S2V5ZWREZXRhaWxz0wkKCxobHKCg
			gAfSHh8gIVokY2xhc3NuYW1lWCRjbGFzc2VzXxATTlNNdXRhYmxl
			RGljdGlvbmFyeaMgIiNcTlNEaWN0aW9uYXJ5WE5TT2JqZWN00goL
			JSehJoAJgAvSCykqK1lOUy5zdHJpbmeAClZsb2dfaWTSHh8tLl8Q
			D05TTXV0YWJsZVN0cmluZ6MtLyNYTlNTdHJpbmfSHh8xMl5OU011
			dGFibGVBcnJheaMxMyNXTlNBcnJhedIeHyI1oiIjXxAPTlNLZXll
			ZEFyY2hpdmVy0Tg5VGRhdGGAAQAIABEAGgAjAC0AMgA3AEUASwBS
			AFoAZQBsAHAAcgB0AHYAegB8AH4AgACCAIcAjACRALoAwQDCAMMA
			xQDKANUA3gD0APgBBQEOARMBFQEXARkBHgEoASoBMQE2AUgBTAFV
			AVoBaQFtAXUBegF9AY8BkgGXAAAAAAAAAgEAAAAAAAAAOgAAAAAA
			AAAAAAAAAAAAAZk=
			</data>
			<key>contentSortColIsAsc</key>
			<true/>
			<key>contentViewport</key>
			<string>{{0, 0}, {694, 450}}</string>
			<key>isToolbarVisible</key>
			<true/>
			<key>queries</key>
			<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;

CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);

INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 3);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone X', 'Electronics', 1200, 1);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);

CREATE TABLE orders (
  order_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  item_id INTEGER(11) NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (order_id)
);

CREATE TABLE inventory_log (
  log_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  item_id INTEGER(11) NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  current_stock INTEGER(11) NOT NULL,
  quantity_added INTEGER(11) NOT NULL,
  updated_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (log_id)
);

CREATE TABLE departments (
  department_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  over_head_costs INTEGER(11),
  product_sales INTEGER(11),   
  PRIMARY KEY (department_id)
);</string>
			<key>table</key>
			<string>inventory_log</string>
			<key>view</key>
			<string>SP_VIEW_CUSTOMQUERY</string>
			<key>windowVerticalDividerPosition</key>
			<real>308</real>
		</dict>
	</dict>
	<key>encrypted</key>
	<false/>
	<key>format</key>
	<string>connection</string>
	<key>queryFavorites</key>
	<array/>
	<key>queryHistory</key>
	<array>
		<string>DROP DATABASE IF EXISTS restaurant_db;
CREATE DATABASE restaurant_db;
USE restaurant_db;
CREATE TABLE reservations (
  res_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  res_name VARCHAR(100) NOT NULL,
  phone VARCHAR(50) NOT NULL,
  email VARCHAR(100) NOT NULL,
  unique_id VARCHAR(50) NOT NULL,
  PRIMARY KEY (res_id)
)</string>
		<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 3);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone X', 'Electronics', 1200, 1);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);
CREATE TABLE orders (
  order_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  item_id INTEGER(11) NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (order_id)
);
CREATE TABLE inventory_log (
  log_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  item_id INTEGER(11) NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  current_stock INTEGER(11) NOT NULL,
  quantity_added INTEGER(11) NOT NULL,
  updated_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (log_id)
)</string>
		<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 10);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone 7', 'Electronics', 900, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);
CREATE TABLE orders (
  order_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  item_id INTEGER(11) NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (order_id)
)</string>
		<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 10);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone 7', 'Electronics', 900, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);
CREATE TABLE orders (
  order_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (order_id)
)</string>
		<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 10);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone 7', 'Electronics', 900, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);
CREATE TABLE orders (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
)</string>
		<string>DROP DATABASE IF EXISTS bamazon_db;
CREATE DATABASE bamazon_db;
USE bamazon_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  department_name VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  stock_quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('MacBook Pro', 'Electronics', 2000, 10);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('iPhone 7', 'Electronics', 900, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Rocketbook', 'Office Supplies', 30, 100);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Brother Color Printer Ink', 'Office Supplies', 70, 200);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Tumbler', 'Household', 20, 5);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Wusthoff Classic Chef Knife', 'Household', 150, 15);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Bistro Crocs', 'Clothing', 40, 45);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Kong Indestructible Ball', 'Pets', 20, 50);
INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Cow Hooves', 'Pets', 10, 450);
CREATE TABLE orders (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  product_name VARCHAR(100) NOT NULL,
  quantity VINTEGER(11) NOT NULL,
  total_price INTEGER(11) NOT NULL,
  remaining_stock INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
)</string>
		<string>INSERT INTO products (product_name, department_name, price, stock_quantity) 
values ('Longhorn Hoodie', 'Clothing', 50, 20)</string>
		<string>SELECT *  FROM top5000 INNER JOIN topLPs ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>SELECT * FROM top5000.artist INNER JOIN topLPs.artist ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>SELECT (topLPs.position, topLPs.raw_year,topLPs.album, topLPs.artist)  FROM top5000 INNER JOIN topLPs ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>SELECT (topLPs.position, topLPs.raw_year,topLPs.albums, topLPs.artist)  FROM top5000 INNER JOIN topLPs ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>SELECT (topLPs.position, topLPs.year,topLPs.albums, topLPs.artist)  FROM top5000 INNER JOIN topLPs ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>SELECT * FROM top5000 INNER JOIN topLPs ON top5000.artist = topLPs.artist AND top5000.raw_year = topLPs.raw_year</string>
		<string>DROP DATABASE IF EXISTS top_songsDB;
CREATE DATABASE top_songsDB;
USE top_songsDB;
CREATE TABLE top5000 (
	
	position INT NOT NULL,
	artist VARCHAR(100),
	song VARCHAR(100),
	raw_year INT,
	raw_total DECIMAL (10,4),
	raw_usa DECIMAL(10,4),
	raw_uk DECIMAL(10,4),
	raw_eur DECIMAL(10,4),
	raw_row DECIMAL(10,4),
	PRIMARY KEY (position)

);
CREATE TABLE topLPs (
	
	position INT NOT NULL,
	artist VARCHAR(100),
	album VARCHAR(100),
	raw_year INT,
	raw_total DECIMAL (10,4),
	raw_usa DECIMAL(10,4),
	raw_uk DECIMAL(10,4),
	raw_eur DECIMAL(10,4),
	raw_row DECIMAL(10,4),
	PRIMARY KEY (position)

)</string>
		<string>CREATE TABLE topLPs (
	
	position INT NOT NULL,
	artist VARCHAR(100),
	album VARCHAR(100),
	raw_year INT,
	raw_total DECIMAL (10,4),
	raw_usa DECIMAL(10,4),
	raw_uk DECIMAL(10,4),
	raw_eur DECIMAL(10,4),
	raw_row DECIMAL(10,4),
	PRIMARY KEY (position)

)</string>
		<string>SELECT * FROM top5000 WHERE artist = "Celine Dion"</string>
		<string>DROP DATABASE IF EXISTS top_songsDB;
CREATE DATABASE top_songsDB;
USE top_songsDB;
CREATE TABLE top5000 (
	
	position INT NOT NULL,
	artist VARCHAR(100),
	song VARCHAR(100),
	raw_year INT,
	raw_total DECIMAL (10,4),
	raw_usa DECIMAL(10,4),
	raw_uk DECIMAL(10,4),
	raw_eur DECIMAL(10,4),
	raw_row DECIMAL(10,4),
	PRIMARY KEY (position)

);
SELECT * FROM top5000</string>
		<string>CREATE DATABASE IF NOT EXISTS project;
USE project;
CREATE TABLE auction(
	item_id INTEGER(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
	item_name varchar(30) NOT NULL,
	bidder varchar(20) NOT NULL,
	initial_bid float(10) NOT NULL,
	high_bid float(10)
	)</string>
		<string>CREATE DATABASE IF NOT EXISTS project;
USE project;
CREATE TABLE auction(
	item_id INTEGER(11) NOT NULL PRIMARY KEY AUTO_INCREMENT,
	item_name varchar(30) NOT NULL,
	bidder varchar(20) NOT NULL,
	high_bid float(10),
	initial_bid float(10) NOT NULL
	)</string>
		<string>CREATE DATABASE IF NOT EXISTS icecream_db;
CREATE TABLE products (
  item_id INTEGER(11) AUTO_INCREMENT NOT NULL,
  flavor VARCHAR(100) NOT NULL,
  price INTEGER(11) NOT NULL,
  quantity INTEGER(11) NOT NULL,
  PRIMARY KEY (item_id)
);
INSERT INTO products (flavor, price, quantity) 
values ('Vanilla', 3.00, 200);
INSERT INTO products (flavor, price, quantity) 
values ('Chocolate', 5.00, 200);
INSERT INTO products (flavor, price, quantity) 
values ('Strawberry', 4.00, 200)</string>
	</array>
	<key>rdbms_type</key>
	<string>mysql</string>
	<key>rdbms_version</key>
	<string>5.7.19</string>
	<key>version</key>
	<integer>1</integer>
</dict>
</plist>
